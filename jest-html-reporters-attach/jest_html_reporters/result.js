window.jest_html_reporters_callback__({"numFailedTestSuites":2,"numFailedTests":2,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":23,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":2,"numTotalTests":25,"startTime":1723815368540,"success":false,"testResults":[{"numFailingTests":1,"numPassingTests":0,"numPendingTests":23,"numTodoTests":0,"perfStats":{"end":1723815369354,"runtime":686,"slow":false,"start":1723815368668},"testFilePath":"C:\\Users\\okozoriz\\OneDrive - Allvue Systems\\Desktop\\AUTOMATION\\Hillel IT Courses\\Olena-Kozoriz\\tests\\cars.test.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mPositive scenarios - creation of the new cars (all possible brands with all possible models) › User can get all the cars\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m200\u001b[39m\n    Received: \u001b[31m404\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 12 |\u001b[39m     test\u001b[33m.\u001b[39monly(\u001b[32m'User can get all the cars'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m         \u001b[36mconst\u001b[39m carsResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m carsController\u001b[33m.\u001b[39mgetCars()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 14 |\u001b[39m         expect(carsResponse\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 15 |\u001b[39m         console\u001b[33m.\u001b[39mlog(carsResponse\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mdata)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 16 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 17 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/cars.test.js\u001b[39m\u001b[0m\u001b[2m:14:37)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":10,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Object.<anonymous> (C:\\Users\\okozoriz\\OneDrive - Allvue Systems\\Desktop\\AUTOMATION\\Hillel IT Courses\\Olena-Kozoriz\\tests\\cars.test.js:14:37)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can get all the cars","status":"failed","title":"User can get all the cars"},{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":null,"failureMessages":[],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can create a new car with brandId=1 (\"Audi\") and modelId=1 (\"TT\")","status":"pending","title":"User can create a new car with brandId=1 (\"Audi\") and modelId=1 (\"TT\")"},{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":null,"failureMessages":[],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can create a new car with brandId=1 (\"Audi\") and modelId=2 (\"R8\")","status":"pending","title":"User can create a new car with brandId=1 (\"Audi\") and modelId=2 (\"R8\")"},{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":null,"failureMessages":[],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can create a new car with brandId=1 (\"Audi\") and modelId=3 (\"Q7\")","status":"pending","title":"User can create a new car with brandId=1 (\"Audi\") and modelId=3 (\"Q7\")"},{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":null,"failureMessages":[],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can create a new car with brandId=1 (\"Audi\") and modelId=4 (\"A6\")","status":"pending","title":"User can create a new car with brandId=1 (\"Audi\") and modelId=4 (\"A6\")"},{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":null,"failureMessages":[],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can create a new car with brandId=1 (\"Audi\") and modelId=5 (\"A8\")","status":"pending","title":"User can create a new car with brandId=1 (\"Audi\") and modelId=5 (\"A8\")"},{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":null,"failureMessages":[],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can create a new car with brandId=2 (\"BMW\") and modelId=6 (\"3\")","status":"pending","title":"User can create a new car with brandId=2 (\"BMW\") and modelId=6 (\"3\")"},{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":null,"failureMessages":[],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can create a new car with brandId=2 (\"BMW\") and modelId=7 (\"5\")","status":"pending","title":"User can create a new car with brandId=2 (\"BMW\") and modelId=7 (\"5\")"},{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":null,"failureMessages":[],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can create a new car with brandId=2 (\"BMW\") and modelId=8 (\"X5\")","status":"pending","title":"User can create a new car with brandId=2 (\"BMW\") and modelId=8 (\"X5\")"},{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":null,"failureMessages":[],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can create a new car with brandId=2 (\"BMW\") and modelId=9 (\"X6\")","status":"pending","title":"User can create a new car with brandId=2 (\"BMW\") and modelId=9 (\"X6\")"},{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":null,"failureMessages":[],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can create a new car with brandId=2 (\"BMW\") and modelId=10 (\"Z3\")","status":"pending","title":"User can create a new car with brandId=2 (\"BMW\") and modelId=10 (\"Z3\")"},{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":null,"failureMessages":[],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can create a new car with brandId=3 (\"Ford\") and modelId=11 (\"Fiesta\")","status":"pending","title":"User can create a new car with brandId=3 (\"Ford\") and modelId=11 (\"Fiesta\")"},{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":null,"failureMessages":[],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can create a new car with brandId=3 (\"Ford\") and modelId=12 (\"Focus\")","status":"pending","title":"User can create a new car with brandId=3 (\"Ford\") and modelId=12 (\"Focus\")"},{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":null,"failureMessages":[],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can create a new car with brandId=3 (\"Ford\") and modelId=13 (\"Fusion\")","status":"pending","title":"User can create a new car with brandId=3 (\"Ford\") and modelId=13 (\"Fusion\")"},{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":null,"failureMessages":[],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can create a new car with brandId=3 (\"Ford\") and modelId=14 (\"Mondeo\")","status":"pending","title":"User can create a new car with brandId=3 (\"Ford\") and modelId=14 (\"Mondeo\")"},{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":null,"failureMessages":[],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can create a new car with brandId=3 (\"Ford\") and modelId=15 (\"Sierra\")","status":"pending","title":"User can create a new car with brandId=3 (\"Ford\") and modelId=15 (\"Sierra\")"},{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":null,"failureMessages":[],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can create a new car with brandId=4 (\"Porsche\") and modelId=16 (\"911\")","status":"pending","title":"User can create a new car with brandId=4 (\"Porsche\") and modelId=16 (\"911\")"},{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":null,"failureMessages":[],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can create a new car with brandId=4 (\"Porsche\") and modelId=17 (\"Cayenne\")","status":"pending","title":"User can create a new car with brandId=4 (\"Porsche\") and modelId=17 (\"Cayenne\")"},{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":null,"failureMessages":[],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can create a new car with brandId=4 (\"Porsche\") and modelId=18 (\"Panamera\")","status":"pending","title":"User can create a new car with brandId=4 (\"Porsche\") and modelId=18 (\"Panamera\")"},{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":null,"failureMessages":[],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can create a new car with brandId=5 (\"Fiat\") and modelId=19 (\"Palio\")","status":"pending","title":"User can create a new car with brandId=5 (\"Fiat\") and modelId=19 (\"Palio\")"},{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":null,"failureMessages":[],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can create a new car with brandId=5 (\"Fiat\") and modelId=20 (\"Ducato\")","status":"pending","title":"User can create a new car with brandId=5 (\"Fiat\") and modelId=20 (\"Ducato\")"},{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":null,"failureMessages":[],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can create a new car with brandId=5 (\"Fiat\") and modelId=21 (\"Panda\")","status":"pending","title":"User can create a new car with brandId=5 (\"Fiat\") and modelId=21 (\"Panda\")"},{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":null,"failureMessages":[],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can create a new car with brandId=5 (\"Fiat\") and modelId=22 (\"Punto\")","status":"pending","title":"User can create a new car with brandId=5 (\"Fiat\") and modelId=22 (\"Punto\")"},{"ancestorTitles":["Positive scenarios - creation of the new cars (all possible brands with all possible models)"],"duration":null,"failureMessages":[],"fullName":"Positive scenarios - creation of the new cars (all possible brands with all possible models) User can create a new car with brandId=5 (\"Fiat\") and modelId=23 (\"Scudo\")","status":"pending","title":"User can create a new car with brandId=5 (\"Fiat\") and modelId=23 (\"Scudo\")"}]},{"numFailingTests":1,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1723815369796,"runtime":381,"slow":false,"start":1723815369415},"testFilePath":"C:\\Users\\okozoriz\\OneDrive - Allvue Systems\\Desktop\\AUTOMATION\\Hillel IT Courses\\Olena-Kozoriz\\tests\\books.test.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAPI testing) › User can get all the books\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32m200\u001b[39m\n    Received: \u001b[31m404\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 13 |\u001b[39m         \u001b[36mconst\u001b[39m booksResponse \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m booksController\u001b[33m.\u001b[39mgetAllBooks()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m         console\u001b[33m.\u001b[39mlog(booksResponse)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 15 |\u001b[39m         expect(booksResponse\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 16 |\u001b[39m         expect(booksResponse\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39mpublisher)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 17 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36mtests/books.test.js\u001b[39m\u001b[0m\u001b[2m:15:38)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["API testing)"],"duration":12,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m200\u001b[39m\nReceived: \u001b[31m404\u001b[39m\n    at Object.<anonymous> (C:\\Users\\okozoriz\\OneDrive - Allvue Systems\\Desktop\\AUTOMATION\\Hillel IT Courses\\Olena-Kozoriz\\tests\\books.test.js:15:38)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"API testing) User can get all the books","status":"failed","title":"User can get all the books"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":[],"coverageDirectory":"C:\\Users\\okozoriz\\OneDrive - Allvue Systems\\Desktop\\AUTOMATION\\Hillel IT Courses\\Olena-Kozoriz\\coverage","coverageProvider":"v8","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":7,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["C:\\Users\\okozoriz\\OneDrive - Allvue Systems\\Desktop\\AUTOMATION\\Hillel IT Courses\\Olena-Kozoriz\\node_modules\\jest-html-reporters\\index.js",{}]],"rootDir":"C:\\Users\\okozoriz\\OneDrive - Allvue Systems\\Desktop\\AUTOMATION\\Hillel IT Courses\\Olena-Kozoriz","runTestsByPath":false,"seed":-690969209,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"C:\\Users\\okozoriz\\OneDrive - Allvue Systems\\Desktop\\AUTOMATION\\Hillel IT Courses\\Olena-Kozoriz\\node_modules\\@jest\\test-sequencer\\build\\index.js","updateSnapshot":"new","useStderr":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1723815369868,"_reporterOptions":{"publicPath":"C:\\Users\\okozoriz\\OneDrive - Allvue Systems\\Desktop\\AUTOMATION\\Hillel IT Courses\\Olena-Kozoriz","filename":"jest_html_reporters.html","expand":false,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})